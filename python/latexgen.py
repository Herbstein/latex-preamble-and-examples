#!/usr/bin/env python

import os
import base64
import argparse
template = """JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolIExvYWQgUHJlYW1wbGUgICAgICAgICAlCiUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUKClxkb2N1bWVudGNsYXNzW2E0LCBlbmdsaXNoXXthcnRpY2xl
fQoKJUltcG9ydCBmcm9tIHRoZSBzYW1lIGZvbGRlcgolXGlucHV0e3ByZWFtYmxlX2VuLnRleH0K
CiVJbXBvcnQgZnJvbSBhYnNvbHV0ZSBwYXRoCiVcdXNlcGFja2FnZXtpbXBvcnR9CiVcaW1wb3J0
e0M6L0dpdEh1Yi9MYVRlWF9QcmVhbWJsZV9hbmRfRXhhbXBsZXMvcHJlYW1ibGUvfXtwcmVhbWJs
ZV9kay50ZXh9CgolSW1wb3J0IGZyb20gYSByZWxhdGl2ZSBwYXRoClx1c2VwYWNrYWdle2ltcG9y
dH0KXHN1YmltcG9ydHsuLi9wcmVhbWJsZS99e3ByZWFtYmxlX2VuLnRleH0KCiUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUKJSBEb2N1bWVudCBzdGFydHMgaGVyZSEgJQolJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlCgpcYmVnaW57ZG9jdW1lbnR9CgolIERlZmluZSB0aXRsZSBhbmQgbW9yZSBvbiBm
cm9udHBhZ2UKCVxzZXR0aXRsZXtUaXRsZX17U3VidGl0bGV9CiAgICBcYWRkYXV0aHtTdGVmZmFu
IFPDuGx2c3Rlbn17MjAxNTA1ODMyQHBvc3QuYXUuZGt9e1wsIGF1NTM0MDY4fQpcbWFrZXRpdGxl
CgpcYmVnaW57YWJzdHJhY3R9Clxub2luZGVudApMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwg
Y29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LCBzZWQgZG8gZWl1c21vZCB0ZW1wb3IgaW5jaWRp
ZHVudCB1dCBsYWJvcmUgZXQgZG9sb3JlIG1hZ25hIGFsaXF1YS4gVXQgZW5pbSBhZCBtaW5pbSB2
ZW5pYW0sIHF1aXMgbm9zdHJ1ZCBleGVyY2l0YXRpb24gdWxsYW1jbyBsYWJvcmlzIG5pc2kgdXQg
YWxpcXVpcCBleCBlYSBjb21tb2RvIGNvbnNlcXVhdC4KXGVuZHthYnN0cmFjdH0KClx0YWJsZW9m
Y29udGVudHMKClxuZXdwYWdlClxzZWN0aW9ue0ludHJvZHVjdGlvbn0gXGxhYmVse3NlYzppbnRy
b30KTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxp
dCwgc2VkIGRvIGVpdXNtb2QgdGVtcG9yIGluY2lkaWR1bnQgdXQgbGFib3JlIGV0IGRvbG9yZSBt
YWduYSBhbGlxdWEuIFV0IGVuaW0gYWQgbWluaW0gdmVuaWFtLCBxdWlzIG5vc3RydWQgZXhlcmNp
dGF0aW9uIHVsbGFtY28gbGFib3JpcyBuaXNpIHV0IGFsaXF1aXAgZXggZWEgY29tbW9kbyBjb25z
ZXF1YXQuCgoKClxiZWdpbnt0aGViaWJsaW9ncmFwaHl9ezl9ClxiaWJpdGVte2JpYml0ZW19CglM
YXN0LCBGaXJzdDogXGVtcGh7VGl0bGV9LCBwdWJsaWNhdGlvbiwgZWRpdGlvbiwgeWVhcgpcZW5k
e3RoZWJpYmxpb2dyYXBoeX0KXGJpYmxpb2dyYXBoeXN0eWxle2FiYnJ2fQpcYmlibGlvZ3JhcGh5
e3JlZmVyZW5jZXJ9CgpcbmV3cGFnZQpcYXBwZW5kaXgKXHNlY3Rpb257QXBwZW5kaXh9CkxvcmVt
IGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQsIHNlZCBk
byBlaXVzbW9kIHRlbXBvciBpbmNpZGlkdW50IHV0IGxhYm9yZSBldCBkb2xvcmUgbWFnbmEgYWxp
cXVhLiBVdCBlbmltIGFkIG1pbmltIHZlbmlhbSwgcXVpcyBub3N0cnVkIGV4ZXJjaXRhdGlvbiB1
bGxhbWNvIGxhYm9yaXMgbmlzaSB1dCBhbGlxdWlwIGV4IGVhIGNvbW1vZG8gY29uc2VxdWF0LgoK
XGVuZHtkb2N1bWVudH0=
"""
preamble_base = """JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgICBQYXBlcnNpemUgYW5kIGVuY29k
aW5nICAgICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKCiUgU2l6ZSBvZiBtYXJn
aW5zIGNhbiBiZSBjaGFuZ2VkIGhlcmUgaW4gdGhlIG91dGNvbW1lbnRlZCB2ZXJzaW9uIQolXHVz
ZXBhY2thZ2VbYTRwYXBlciwgdG90YWw9ezZpbiwgOGlufV17Z2VvbWV0cnl9CSV0b3RhbD17d2lk
dGgsIGhlaWdodH0KXHVzZXBhY2thZ2VbYTRwYXBlcl17Z2VvbWV0cnl9CgolIEJhc2ljczogZm9u
dCwgY29kZWMgZXRjLgpcdXNlcGFja2FnZVt1dGY4XXtpbnB1dGVuY30JCQkJCQklIGVuY29kaW5n
OiB1dGYtOCAobm9yZGljIGxldHRlcnMpClx1c2VwYWNrYWdlW1QxXXtmb250ZW5jfQkJCQkJCSUg
dXNlIDgtYml0IGVuY29kZWQgZm9udHMKXHJlbmV3Y29tbWFuZHtcc2ZkZWZhdWx0fXtwaHZ9CQkJ
CQklIGNoYW5nZXMgdGhlIGRlZmF1bHQgZm9udAoKJVx1c2VwYWNrYWdlW3BhcmZpbGxde3BhcnNr
aXB9ICAgICAgJUluc3RlYWQgb2YgaW5kZW50aW5nIG9uIGEgbmV3bGluZSBhZGRzIHdoaXRlc3Bh
Y2UKCgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgICAgIFRhYmxlcyBhbmQg
ZmlndXJlcyAgICAgICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKClx1c2VwYWNr
YWdle3RhYnVsYXJ4LGJvb2t0YWJzLGF1dGhibGt9CQkgICAgJSB2YXJpb3VzIGJhc2ljIHN0dWZm
IGZvciB0YWJsZXMgYW5kIG1vcmUKCiUgRmlndXJlcyBhbmQgY2FwdGlvbnMKXHVzZXBhY2thZ2V7
Y2FwdGlvbn0JCQkJCQkJJSBjcmVhdGUgY2FwdGlvbnMgZm9yIGZpZ3VyZXMKXHVzZXBhY2thZ2V7
c3ViZmlnfQkJCQkJCQkJJSBjcmVhdGUgc3ViZmlndXJlcyBvZiBhIGZpZ3VyZQolXHVzZXBhY2th
Z2V7c3ViY2FwdGlvbn0JCQkJCSUgY3JlYXRlIGNhcHRpb25zIGZvciBzdWJmaWd1cmVzCiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAlICAgICBjdXJyZW50bHkgb2ZmLCBkdWUgdG8g
Y29uZmxpY3RzCgpcdXNlcGFja2FnZXt3cmFwZmlnfQkJCQkJCQklIGxldHRpbmcgZmlndXJlcyBi
ZSBpbiB0ZXh0CgpcdXNlcGFja2FnZXtyb3RhdGluZ30gICAgICAgICAgICAgJSBsZXQgYW55IGVu
dmlyb25tZW50IGJlIHJvdGF0ZWQgKGZpZ3VyZXMgc2lkZXdheXMpCiAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAlICAgICBcYmVnaW57c2lkZXdheXN9IG9yIFxiZWdpbnt0dXJufXsz
MH0KCgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUgICAgICAgICAgIFZh
cmlhYmxlcyAgICAgICAgICAgICAgJQolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUKXHVzZXBhY2thZ2V7cGdma2V5c30JCQklSW5pdGlhbGl6ZSB0aGUgdmFyaWFibGUga2V5LXZh
bHVlIHBhcmlycwoKXG5ld2NvbW1hbmR7XHNldHZhbHVlfVsxXXtccGdma2V5c3svdmFyaWFibGVz
LyMxfX0KXG5ld2NvbW1hbmR7XGdldHZhbHVlfVsxXXtccGdma2V5c3ZhbHVlb2Z7L3ZhcmlhYmxl
cy8jMX19ClxuZXdjb21tYW5ke1xkZWNsYXJlfVsxXXslCiBccGdma2V5c3sKICAvdmFyaWFibGVz
LyMxLmlzIGZhbWlseSwKICAvdmFyaWFibGVzLyMxLnVua25vd24vLnN0eWxlID0ge1xwZ2ZrZXlz
Y3VycmVudHBhdGgvXHBnZmtleXNjdXJyZW50bmFtZS8uaW5pdGlhbCA9ICMjMX0KIH0lCn0KClxk
ZWNsYXJle30KCgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgICAgIExhVGVY
IFByb2dyYW1taW5nICAgICAgICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKClx1
c2VwYWNrYWdle3hwYXJzZX0JCQkJCQkJCSUgU2Nhbm5pbmcgYXJndW1lbnRzClx1c2VwYWNrYWdl
e2lmdGhlbn0JCQkJCQkJCSUgQ29uZGl0aW9uYWxzClx1c2VwYWNrYWdle2NhbGN9CQkJCQkJCQkl
IENhbGN1bGF0aW9ucwoKCgolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolICAgICAg
ICAgIEh5cGVybWVkaWEgICAgICAgICAgJQolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JQoKXHVzZXBhY2thZ2V7dXJsLCBoeXBlcnJlZn0JCQkJCQkJJSBcdXJse2xpbmt9IGFuZCBcaHJl
ZntsaW5rfXtyZXBsYWNpbmcgdGV4dH0KCiVNYWNyb3MgdGFrZW4gZnJvbSB0aGUgcHJlYW1ibGUg
b2YgdGhlIE1hdEZ5c1R1dG9yIExhVGVYIEd1aWRlLgpcbmV3Y29tbWFuZCp7XGh0dHB9WzFde1xo
cmVme2h0dHA6Ly8jMX17IzF9fQkJJSBtYWNybyBmb3IgaHR0cCBsaW5rczogXGh0dHB7d3d3Lm1h
dGZ5c3R1dG9yLmRrfQpcbmV3Y29tbWFuZCp7XG1haWx0b31bMV17XGhyZWZ7bWFpbHRvOiMxfXsj
MX19CQklIG1hY3JvIGZvciBtYWlsczogXG1haWx0b3tlbWFpbEBlbWFpbC5jb219CgolJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolICAgICAgICAgU3R5bGl6YXRpb24gICAgICAgICAg
JQolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQoKJSBIZWFkZXJzIG9nIGZvb3RlcnMK
XHVzZXBhY2thZ2V7bGFzdHBhZ2V9ICAgICAgICAgICAgICAgICAgICAgICAgICAgJSBcbGFzdHBh
Z2UgY29tbWFuZCBmb3IgbnVtYmVycyBvZiBwYWdlcwpcdXNlcGFja2FnZXtmYW5jeWhkcn0gICAg
ICAgICAgICAgICAgICAgICAgICAgICAlIGNyZWF0ZSBjb29sIGhlYWRlcnMgYW5kIGZvb3RlcnMK
XHBhZ2VzdHlsZXtmYW5jeX0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJSB3aG8gZG9l
c24ndCB3YW50IHRoZWlyIHBhZ2UgdG8gYmUgZmFuY3k/CgolIFVzZSBvZiBjb2x1bW5zClx1c2Vw
YWNrYWdle211bHRpY29sfQoKJSBRdW90YXRpb25zCiUgImRhbmlzaCIgb3IgImJyaXRpc2giClx1
c2VwYWNrYWdlW2RhbmlzaD1ndWlsbGVtZXRzXXtjc3F1b3Rlc30gICAgCSUgdHdvIHN0eWxlczog
InF1b3RlcyIgb3IgPj5ndWlsbGVtZXRzPDwKJVxNYWtlQXV0b1F1b3Rle8K7fXvCq30gICAgICAg
ICAgICAgICAgICAgICAgIAklIGRlY29tbWVudCBmb3IgZWFzeSBtYWNybwolXE1ha2VBdXRvUXVv
dGUqe+KAun174oC5fSAgICAgICAgICAgICAgICAgICAgICAJJSBkZWNvbW1lbnQgZm9yIGV2ZW4g
ZWFzaWVyIG1hY3JvcwoKCgolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolICAgICAg
ICAgICAgIE1hdGggICAgICAgICAgICAgJQolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JQolXG5ld2NvbW1hbmR7XGhtbWF4fXswfQkJCQkJCQkJJSBtaW5pbWl6ZXMgdGhlIGFtb3VudCBv
ZiBib2xkIGZhbWlsaWVzCiVcbmV3Y29tbWFuZHtcYm1tYXh9ezF9CQkJCQkJCQklIHRoaXMgYWxs
b3dzIGZvciBtb3JlIG1hdGggZmFtaWxpZXMKCiUgdmFyaW91cyBiYXNpYyBzdHVmZgpcdXNlcGFj
a2FnZXtibSwgbWF0aHRvb2xzLCBhbXNtYXRofQoKJSBWYXJpb3VzIHN5bWJvbCBwYWNrYWdlcwpc
dXNlcGFja2FnZXthbXNzeW1ifQolXHVzZXBhY2thZ2VbdXRvcGlhXXttYXRoZGVzaWdufQkJCQkJ
JSBmdWxsIG92ZXJ3cml0ZSBvZiB0aGUgZm9udCBzeXN0ZW0KXHVzZXBhY2thZ2V7c3RtYXJ5cmR9
CQkJCQkJCQklIGV2ZW4gbW9yZSBzeW1ib2xzCgolXGxldFxtYXRoY2FsXHVuZGVmaW5lZAkJCQkJ
CQkJJSBMZXQncyByZWRlZmluZSB0aGUgbWF0aGNhbCBhbHBoYWJldAolXERlY2xhcmVNYXRoQWxw
aGFiZXR7XG1hdGhjYWx9e09NU317Y21zeX17bX17bn0KCiUgTWF0aCBzaG9ydGN1dHMKXHJlbmV3
Y29tbWFuZHtcZH17XCwgXG1hdGhybXtkfX0gICAgICAgICAgICAgICAgICAgICUgXGQgPSBkaWZm
ZXJlbnRpYWwgZCB3aXRoIGEgYml0IG9mIHNwYWNpbmcKXG5ld2NvbW1hbmR7XGV9e1xtYXRocm17
ZX19ICAgICAgICAgICAgICAgICAgICAgICAgICUgXGUgPSBldWxlcnMgbnVtYmVyClxuZXdjb21t
YW5ke1xSfXtcbWF0aGJie1J9fSAgICAgICAgICAgICAgICAgICAgICAgICAlIFxSID0gUmVhbCBu
dW1iZXJzClxuZXdjb21tYW5ke1xOfXtcbWF0aGJie059fSAgICAgICAgICAgICAgICAgICAgICAg
ICAlIFxOID0gTmF0dXJhbCBudW1iZXJzClxuZXdjb21tYW5ke1xDfXtcbWF0aGJie0N9fSAgICAg
ICAgICAgICAgICAgICAgICAgICAlIFxDID0gQ29tcGxleCBudW1iZXJzClxuZXdjb21tYW5ke1xR
fXtcbWF0aGJie1F9fSAgICAgICAgICAgICAgICAgICAgICAgICAlIFxRID0gUmF0aW9uYWwgbnVt
YmVycwpcbmV3Y29tbWFuZHtcRn17XG1hdGhiYntGfX0JCQkJCQkJJSBcRgoKXG5ld2NvbW1hbmR7
XGFic31bMV17XGxlZnRcbHZlcnQgIzEgXHJpZ2h0XHJ2ZXJ0fQkJJSBcYWJze2FyZ30JCWFic29s
dXRlL21vZHVsbyBvZiB2YWx1ZQpcbmV3Y29tbWFuZHtcbm9ybX1bMV17XGxlZnRcbFZlcnQgIzEg
XHJpZ2h0XHJWZXJ0fQkJJSBcbm9ybXthcmd9CW5vcm0gb2YgYSB2YWx1ZQpcbmV3Y29tbWFuZHtc
Y2VpbH1bMV17XGxlZnRcbGNlaWwgIzEgXHJpZ2h0XHJjZWlsfQkJJSBcY2VpbHthcmd9CWNlaWxp
bmcgb2YgYSB2YWx1ZQpcbmV3Y29tbWFuZHtcZmxvb3J9WzFde1xsZWZ0XGxmbG9vciAjMSBccmln
aHRccmZsb29yfQklIFxmbG9vcnthcmd9CWZsb29yIG9mIGEgdmFsdWUKClxuZXdjb3VudGVye2l9
CgpcRGVjbGFyZURvY3VtZW50Q29tbWFuZCBcc2VxIHsgZyBnIGcgZyB9IHsJCQklIFxzZXF7eH17
aX17an17c30KCVxzZXRjb3VudGVye2l9ezB9CQkJCQkJCQklIHhfaSwgeF9pK3MsIC4uLiB4X2oK
CVxJZlZhbHVlVCB7IzJ9IHsgXGFkZHRvY291bnRlcntpfXsjMn0gfQoJXElmVmFsdWVURiB7IzF9
CgkJeyMxfQoJCXt4fQoJX3sgXGFyYWJpY3tpfSB9LAoJXElmVmFsdWVURiB7IzR9IAoJCXtcYWRk
dG9jb3VudGVye2l9eyM0fX0KCQl7XGFkZHRvY291bnRlcntpfXsxfX0KCVxJZlZhbHVlVEYgeyMx
fSAKCQl7IzF9CgkJe3h9IAoJX3sgXGFyYWJpY3tpfSB9LAoJXGRvdHMKCVxJZlZhbHVlVEYgeyMz
fQoJCXsgLCAjMV97IzN9IH0KCQl7fQp9CgpcRGVjbGFyZURvY3VtZW50Q29tbWFuZCBcZXJvIHsg
ZyBnIH0gewkJCQklIFxlcm8ge3gsIHl9CglcYmVnaW57YXJyYXl9e2N9CQkJCQkJCQklCXgKCQlc
SWZWYWx1ZVRGeyMxfQkJCQkJCQkJJQl+CgkJCXtfeyMxfX0JCQkJCQkJCQklCXkKCQkJe1xwaGFu
dG9te1xzaW19fQoJXFwKCQlcc2ltCglcXAoJCVxJZlZhbHVlVEZ7IzJ9CgkJCXteeyMyfX0KCQkJ
e1xwaGFudG9te1xzaW19fQoJXGVuZHthcnJheX0KfQoKXERlY2xhcmVEb2N1bWVudENvbW1hbmQg
XHNldCB7IG0gZyB9eyAJCQkJJSBcc2V0c3tYfXtDfQoJIFxsZWZ0XGxicmFjZQkJCQkJCQkJCSUg
e1ggfCBDfQoJIAkjMSBcSWZWYWx1ZVQgeyMyfSB7IFwgfCBcICAjMiB9CgkgXHJpZ2h0XHJicmFj
ZQp9CgpcbWFrZWF0bGV0dGVyCQkJCQkJCQkJCSUgYWRkcyB2ZXJ0aWNhbCBsaW5lcyB0byBtYXRy
aWNlcwpccmVuZXdjb21tYW5kKlxlbnZAbWF0cml4WzFdWypcY0BNYXhNYXRyaXhDb2xzIGNdewog
IFxoc2tpcCAtXGFycmF5Y29sc2VwCiAgXGxldFxAaWZuZXh0Y2hhclxuZXdAaWZuZXh0Y2hhcgog
IFxhcnJheXsjMX19ClxtYWtlYXRvdGhlcgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUKJSAgICAgIExvZ2ljIGFuZCBwcm9vZnMgICAgICAgICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUKCiUgUHJvb2ZzClx1c2VwYWNrYWdle2Ftc3RobX0JCQkJCQkJCSUgVGhlb3Jl
bSBwYWNrYWdlClx0aGVvcmVtc3R5bGV7ZGVmaW5pdGlvbn0JCQkJCQklIHBsYWluLCBkZWZpbml0
aW9uLCByZW1hcmsKJVxzd2FwbnVtYmVycwkJCQkJCQkJCSUgSWYgeW91IHdhbnQgdG8gaGF2ZSB0
aGUgbnVtYmVyIGZpcnN0CgolIExvZ2ljIHBhY2thZ2VzClx1c2VwYWNrYWdle2xwbGZpdGNofQkJ
CQkJCSUgZml0Y2ggc3R5bGUgcHJvb2ZzCgolXHVzZXBhY2thZ2V7bG9naWNwcm9vZn0JCQkJCSUg
YWx0ZXJuYXRpdmUgcGFja2FnZSwgcmVzZW1ibGluZyB0aGUgZEJlckxvZyBib29rCiVcc2V0bGVu
Z3RoXHN1YnByb29maG9yaXpzcGFjZXsyZW19CQkJJSBJbmRlbnQgZm9yIHN1YnByb29mcy4gQ2hh
bmdlZCBmb3IgZnJlc2ggdmFyaWFibGVzCgoKCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlCiUgICAgICBDb2xvciBhbmQgcHJlc2V0cyAgICAgICAlCiUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlCgolXHVzZXBhY2thZ2V7eGNvbG9yfQkJCQkJCQklIGJhc2ljIHhjb2xvciBw
YWNrYWdlClx1c2VwYWNrYWdlW3RhYmxlLHhjZHJhd117eGNvbG9yfQkJCQklIHhjb2xvciBwYWNr
YWdlIHdpdGggc3VwcG9ydCBmb3IgdGFibGVzClxkZWZpbmVjb2xvcntsc3RDb21tZW50fXtyZ2J9
ezAuNDUsMC40NSwwLjQ1fQklIGNvZGU6IGNvbW1lbnRzIChHcmV5KQpcZGVmaW5lY29sb3J7bHN0
S2V5fXtyZ2J9ezAuMTMsMC4yMSwxfQkJCSUgY29kZTogcHJpbWFyeSBrZXl3b3JkcyAoQmx1ZSkK
XGRlZmluZWNvbG9ye2xzdEtleTJ9e3JnYn17MSwwLjY2NjY2NywwLjEzNzI2fSAgJSBjb2RlOiBz
ZWNvbmRhcnkga2V5d29yZHMgKERheVs5XSBPcmFuZ2UpClxkZWZpbmVjb2xvcntsc3RTdHJpbmd9
e3JnYn17MC4xLDAuNjUsMC4xfQkJJSBjb2RlOiBzdHJpbmdzIChHcmVlbikKXGRlZmluZWNvbG9y
e2xzdEJhc2V9e3JnYn17MC4wLDAuMCwwLjB9CQkJJSBjb2RlOiBiYXNlIChCbGFjaykKCgoKJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgICAgICAgICAgIFRpa3ogICAgICAgICAg
ICAgICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKClx1c2VwYWNrYWdle3Rpa3p9
CQkJCQkJCQklIGltcG9ydCBiYXNlcGFja2FnZQpcdXNldGlremxpYnJhcnl7Y2FsY30JCQkJCQkJ
JSBDb29yZGluYXRlIGNhbGN1YXRpb25zClx1c2V0aWt6bGlicmFyeXtwb3NpdGlvbmluZ30gICAg
ICAgICAgICAgICAgICAgICUgUmVsYXRpdmUgcG9zaXRpb25pbmcKXHVzZXRpa3psaWJyYXJ5e3No
YXBlc30gICAgICAgICAgICAgICAgICAgICAgICAgJSBEZWZpbmluZyBub2Rlc2hhcGVzIGFuZCBt
b3JlIChpc2EgZm9yIEUvUikKCiUgU2ltcGxlIHRyZWUgbWFjcm8gd2l0aCBjb21wYWJpbGl0eSB0
byB0aWt6Clx1c2VwYWNrYWdle3Rpa3otcXRyZWV9CQkJCQkJCSUgaW1wb3J0IHNpbXBsZSB0cmVl
IG1hY3JvClx1c2V0aWt6bGlicmFyeXthcnJvd3N9ICAgICAgICAgICAgICAgICAgICAgICAgICUg
YXJyb3dzIGZvciB0cmVlcwoKJSBUaWt6IHNldHRpbmdzIGZvciByZWQtYmxhY2sgdHJlZXMKXHRp
a3pzZXR7CiAgdHJlZW5vZGUvLnN0eWxlID0ge2FsaWduPWNlbnRlciwgaW5uZXIgc2VwPTBwdCwg
dGV4dCBjZW50ZXJlZCwKICAgIGZvbnQ9XHNmZmFtaWx5fSwKICBhcm5fYi8uc3R5bGUgPSB7dHJl
ZW5vZGUsIGNpcmNsZSwgd2hpdGUsIGZvbnQ9XHNmZmFtaWx5XGJmc2VyaWVzLCBkcmF3PWJsYWNr
LAogICAgZmlsbD1ibGFjaywgdGV4dCB3aWR0aD0xLjVlbX0sICAgICAgICAgICAgICAlIGJsYWNr
IG5vZGUKICBhcm5fci8uc3R5bGUgPSB7dHJlZW5vZGUsIGNpcmNsZSwgd2hpdGUsIGZvbnQ9XHNm
ZmFtaWx5XGJmc2VyaWVzLCBkcmF3PXJlZCwKICAgIGZpbGw9cmVkLCB0ZXh0IHdpZHRoPTEuNWVt
fSwgICAgICAgICAgICAgICUgcmVkIG5vZGUKICBhcm5feC8uc3R5bGUgPSB7dHJlZW5vZGUsIHJl
Y3RhbmdsZSwgZHJhdz1ibGFjaywgZmlsbD1ibGFjaywKICAgIG1pbmltdW0gd2lkdGg9MC41ZW0s
IG1pbmltdW0gaGVpZ2h0PTAuNWVtfSAgJSBuaWwgbm9kZQp9CgolIFRpa3ogQXV0b21vdGEgZm9y
IFR1cmluZyBNYWNoaW5lcwpcdXNldGlremxpYnJhcnl7YXV0b21hdGF9CgolIFRpa3ogRS9SIGRp
YWdyYW0KXHVzZXRpa3psaWJyYXJ5e2VyfQoKJSBHcmFwaGljcyBhbmQgcGxvdHMKXHVzZXBhY2th
Z2V7Z3JhcGhpY3h9CQkJCQkJCSUgaW1wb3J0IGJhc2VwYWNrYWdlIGZvciBncmFwaHMKXHVzZXBh
Y2thZ2V7cGdmcGxvdHN9CQkJCQkJCSUgaW1wb3J0IHBnZnBsb3RzClx1c2VwZ2ZwbG90c2xpYnJh
cnl7ZmlsbGJldHdlZW59CQkJCSUgYWRkIGZpbGxCZXR3ZWVuIGNvbW1hbmQKXHBnZnBsb3Rzc2V0
e2NvbXBhdD0xLjEwfQkJCQkJCSUgY2hvb3NlIHZlcnNpb24gb2YgcGdmcGxvdHMKCiUgTWFjcm8g
Zm9yIGNpcmNsZSB3aXRoIHN5bWJvbCBpbnNpZGUuClxuZXdjb21tYW5kKlxjaXJjbGVkWzFdeyBc
dGlreltiYXNlbGluZT0oQy5iYXNlKV1cbm9kZVtkcmF3LGNpcmNsZSxpbm5lciBzZXA9MC41cHRd
KEMpIHsjMX07XCF9CgoKCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUgICAgICAg
ICAgICBDb2RlICAgICAgICAgICAgICAlCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
ClxuZXdjb21tYW5ke1xjb2RlfVsxXXt7XHNmICMxfX0JCQkJCSUgXGNvZGV7WH0gd3JpdGVzIFgg
aW4gYSBjb2RlLWFwcHJvcHJpYXRlIGZvbnQKCgoKCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlCiUgICAgICAgICBsc3RsaXN0aW5nICAgICAgICAgICAlCiUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlCgolIEltcG9ydCBsc3RsaXN0aW5ncyAtIGJlYXV0aWZ1bCBzb3VyY2Vj
b2RlIQpcdXNlcGFja2FnZXtsaXN0aW5nc30KCgolIEN1c3RvbSBsYW5ndWFnZSBkZWZpbml0aW9u
cwolIERlZmluaXRpb24gb2YgUHNldWRvY29kZQpcbHN0ZGVmaW5lbGFuZ3VhZ2V7cHNldWRvY29k
ZX17CiAga2V5d29yZHM9WzFdewogIAkgICAgIGJ5LCBieSwgZG93bnRvLCBlbHNlLCBlcnJvciwg
Zm9yLCBpZiwgcmVwZWF0LCByZXR1cm4sIHRvLCB1bnRpbCwgd2hpbGUsIHdoaWxlCiAgCX0sCQkJ
CQkJCQkgICAgCQklIGxpc3Qgb2Yga2V5d29yZHMsIGZpcnN0IGFuZCBsYXN0IGFyZSBub3QgdXNl
ZAogIGtleXdvcmRzPVsyXXsKICAgICAgICBhbmQsIGFuZCwgb3IsIE5JTCwgTklMCiAgfQogIHNl
bnNpdGl2ZT1mYWxzZSwJCQkJCQkJCSUga2V5d29yZHMgYXJlIG5vdCBjYXNlLXNlbnNpdGl2ZQog
IG1vcmVjb21tZW50PVtsXXsvL30sCQkJCQkJCSUgbCBpcyBmb3IgbGluZSBjb21tZW50CiAgbW9y
ZWNvbW1lbnQ9W3Ndey8qfXsqL30sCQkJCQkJJSBzIGlzIGZvciBzdGFydCBhbmQgZW5kIGRlbGlt
aXRlcgogIG1vcmVzdHJpbmc9W2JdIgkJCQkJCQkJJSBzdHJpbmdzIGFyZSBlbmNsb3NlZCBpbiBk
b3VibGUgcXVvdGVzCn0KCgolIFNldHRpbmdzIGZvciBsc3RsaXN0aW5ncwpcbHN0c2V0e2xhbmd1
YWdlPXBzZXVkb2NvZGUsCQkJCQklIGNob29zZSBsYW5ndWFnZQogIGNvbHVtbnM9ZmxleGlibGUs
CQkJCQkJCQklIGxldCB0aGUgYm94IGFsaWduIHRvIHRoZSB3aWR0aCBvZiB0aGUgcGFnZQogICAg
bGl0ZXJhdGU9e8OmfXt7XGFlfX0xe8O4fXt7XG99fTF7w6V9e3tcYWF9fTEJJSBhbGxvdyDDpiwg
w7ggYW5kIMOlIGluIGNvZGUKICAgICAgICAgICB7w4Z9e3tcQUV9fTF7w5h9e3tcT319MXvDhX17
e1xBQX19MSwJJSAJKHRoaXMgY2hhbmdlIHdhcyB0YWtlbiBmcm9tIHRoZSBwcmVhbWJsZSBvZiB0
aGUgTWF0RnlzVHV0b3IgTGFUZVggR3VpZGUpCiAgYnJlYWtsaW5lcz10cnVlLAkJCQkJCQkJJSBh
dXRvbWF0aWNhbGx5IGJyZWFrIGxpbmVzCiAgYnJlYWthdHdoaXRlc3BhY2U9dHJ1ZSwJCQkJCQkl
IGF1dG9tYXRpY2FsbHkgYnJlYWsgc2hvdWxkIHRoZXJlIG9ubHkgYmUgd2hpdGUgc3BhY2UuCiAg
bnVtYmVycz1sZWZ0LAkJCQkJCQkJCSUgbnVtYmVyaW5nOiBub25lLCBsZWZ0LCByaWdodAogIG51
bWJlcnNlcD01cHQsCQkJCQkJCQklIGRpc3RhbmNlIGJldHdlZW4gbGluZW51bWJlcnMgYW5kIGNv
ZGUKICBudW1iZXJzdHlsZT1cY29sb3J7bHN0Q29tbWVudH0sCQkJCSUgY2hhbmdlIHN0eWxlIG9m
IG51bWJlcmluZyAtIGN1cnJlbnRseSBncmV5LgogIHN0ZXBudW1iZXI9MSwJCQkJCQkJCQklIHN0
ZXAgYmV0d2VlbiB0byBsaW5lLW51bWJlcnMuIDEgPSBlYWNoIGxpbmUgaXMgbnVtYmVyZWQKICBz
aG93c3BhY2VzPWZhbHNlLAkJCQkJCQkJJSBzaG93IHNwYWNlcyBldmVyeXdoZXJlIC0gYWRkaW5n
IHBhcnRpY3VsYXIgdW5kZXJzY29yZXMKICBzaG93c3RyaW5nc3BhY2VzPWZhbHNlLAkJCQkJCSUg
dW5kZXJsaW5lIHNwYWNlcyB3aXRoaW4gc3RyaW5ncyBvbmx5LgogIHNob3d0YWJzPWZhbHNlLAkJ
CQkJCQkJJSBzaG93IHRhYnMgd2l0aGluIHN0cmluZ3MgYWRkaW5nIHBhcnRpY3VsYXIgdW5kZXJz
Y29yZXMuCiAgZXNjYXBlaW5zaWRlPXsqQH17QCp9LCAgICAgICAgICAgICAgICAJCSUgaWYgeW91
IHdhbnQgdG8gYWRkIExhVGVYIHdpdGhpbiB5b3VyIGNvZGUKICBiYXNpY3N0eWxlPVx0dGZhbWls
eSBcY29sb3J7bHN0QmFzZX0sCQkJJSBzZXQgYmFzaWMgY29sb3IKICBjb21tZW50c3R5bGU9XGNv
bG9ye2xzdENvbW1lbnR9LAkJCQklIHNldCBjb2xvciBvZiBjb21tZW50cwogIGtleXdvcmRzdHls
ZT1bMV1cY29sb3J7bHN0S2V5fSwJCQkJJSBzZXQgY29sb3Igb2YgcHJpbWFyeSBrZXl3b3Jkcwog
IGtleXdvcmRzdHlsZT1bMl1cY29sb3J7bHN0S2V5Mn0sCQkJCSUgc2V0IGNvbG9yIG9mIHNlY29u
ZGFyeSBrZXl3b3JkcwogIHN0cmluZ3N0eWxlPVxjb2xvcntsc3RTdHJpbmd9LAkJCQklIHNldCBj
b2xvciBvZiBzdHJpbmdzCn0KCiUgbHN0bGlzdGluZyAtIFB1dCBpdCBiZWF1dGlmdWxseSBpbiB0
aGUgbWlkZGxlClxsc3RzZXR7eGxlZnRtYXJnaW49IC4xXHRleHR3aWR0aCAsICAgICAJCQkJCQkJ
JSBsZWZ0bWFyZ2luIGJlaW5nIDEwJSBvZiB0aGUgY3VycmVudCB3aWR0aAogIHhyaWdodG1hcmdp
bj0gLjFcdGV4dHdpZHRoLCAgICAgICAgICAgCQkJCQkJCSUgcmlnaHQgbWFyZ2luIGFsc28gMTAl
CiAgZnJhbWU9Ym90dG9tbGluZSAgICAgICAgICAgICAgICAgICAgICAJCQkJCQkJJSBEcmF3IGEg
bGluZSBvbiB0aGUgYm90dG9tIG9mIHRoZSBzdXJyb3VuZGluZyBib3gKfQoKJSBsc3RsaXN0aW5n
IGhlYWRlcgpcRGVjbGFyZUNhcHRpb25Gb250e3doaXRlfXtcY29sb3J7d2hpdGV9fSAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICUgZm9udHN0eWxlIG9mIGNhcHRpb24KXERl
Y2xhcmVDYXB0aW9uRm9ybWF0e2xpc3Rpbmd9e1xjb2xvcmJveHtncmF5fXtccGFyYm94e1xsaW5l
d2lkdGh9eyMxIzIjM319fSAgICAlIGNyZWF0ZSBuaWNlIGdyZXkgYm94ZXMgZm9yIGNhcHRpb25z
ClxjYXB0aW9uc2V0dXBbbHN0bGlzdGluZ117Zm9ybWF0PWxpc3RpbmcsbGFiZWxmb250PXdoaXRl
LHRleHRmb250PXdoaXRlfSAgICAgICAgJSBhcHBseSBzZXR0aW5ncyB0byBsaXN0aW5nCgoKJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUgICAgICBUaXRsZSBhbmQgaW5mb3Jt
YXRpb24gICAgICAgJQolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKXHNldHZh
bHVle3RpdGxlID0gfQpcc2V0dmFsdWV7c3VidGl0bGUgPSB9CgpcRGVjbGFyZURvY3VtZW50Q29t
bWFuZCBcc2V0dGl0bGUgeyBtIGcgfXsgCQkJCSUgXHNldFRpdGxle3RpdGxlfXtzdWJ0aXRsZX0K
CSBcc2V0dmFsdWV7dGl0bGUgPSAjMX0KCSBcSWZWYWx1ZVRGIHsjMn0geyBcc2V0dmFsdWV7c3Vi
dGl0bGUgPSAjMn0gXHRpdGxle1xodWdlIFxnZXR2YWx1ZXt0aXRsZX0gXFwgXGxhcmdlIFxnZXR2
YWx1ZXtzdWJ0aXRsZX19fQoJIAkJCQkgeyBcdGl0bGV7XGh1Z2UgXGdldHZhbHVle3RpdGxlfX0g
fQp9Cgpcc2V0dmFsdWV7bmFtZSA9IH0KXHNldHZhbHVle2VtYWlsID0gfQpcc2V0dmFsdWV7aWQg
PSB9CgpcRGVjbGFyZURvY3VtZW50Q29tbWFuZCBcYWRkYXV0aCB7IG0gZyBnIH17IAkJCSUgXGFk
ZEF1dGh7bmFtZX17ZW1haWx9e2lkfQoJIFxzZXR2YWx1ZXtuYW1lID0gIzF9CgkgXGF1dGhvcnsj
MX0KCSBcSWZWYWx1ZVQgeyMyfSB7CgkgCVxzZXR2YWx1ZXtlbWFpbCA9ICMyfQoJIAlcYWZmaWx7
XHByb3RlY3RcaHJlZnttYWlsdG86IzJ9eyMyfX0KCSB9CgkgXElmVmFsdWVUIHsjM30gewoJIAlc
c2V0dmFsdWV7aWQgPSAjM30KCSB9Cn0KClxzZXR0aXRsZXtLZWVwIENhbG0gYW5kIFx0ZXh0YmFj
a3NsYXNoIHNldHRpdGxlfQoKXGRhdGV7XHRvZGF5fQoKXHNldHZhbHVle29mID0gb2Z9CgpcbGhl
YWR7XHByb3RlY3RcaHJlZntcZ2V0dmFsdWV7ZW1haWx9fXtcZ2V0dmFsdWV7bmFtZX1cZ2V0dmFs
dWV7aWR9fSBcXCBcZ2V0dmFsdWV7dGl0bGV9fQpcY2hlYWR7fQpccmhlYWR7XHRoZXBhZ2VcIFxn
ZXR2YWx1ZXtvZn0gXHBhZ2VyZWZ7TGFzdFBhZ2V9IFxcIFxub3VwcGVyY2FzZXtcbGVmdG1hcmt9
fQoKJVxsZm9vdHt9CiVcY2Zvb3R7fQolXHJmb290e30K
"""
preamble_en = """JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSBTZXR0aW5ncyBmb3IgZG9jdW1l
bnQgKGVuZ2xpc2gpICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKCiUgSW5w
dXQgY29tbW9uIGRlZmluaXRpb24KXGlucHV0e3ByZWFtYmxlX2Jhc2UudGV4fQoKCiUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUgICBFbmNvZGluZyBhbmQgaHlwaGVuYXRpb24gICAl
CiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUgQmFzaWNzOiBmb250LCBjb2RlYyBl
dGMuClx1c2VwYWNrYWdlW2VuZ2xpc2hde2JhYmVsfQkJCQkJCSUgYmFiZWwgaXMgZm9yIGh5cGhl
bmF0aW9uIGFuZCBvdGhlciBnb29kaWVzCgoKCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlCiUgICAgICAgICBsc3RsaXN0aW5nICAgICAgICAgICAlCiUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlClxyZW5ld2NvbW1hbmR7XGxzdGxpc3RpbmduYW1lfXtDb2RlfSAgICAgICAg
ICAgICAgJSBmb3Igb25lIGJsb2NrIG9mIGNvZGUgYWxvbmUKXHJlbmV3Y29tbWFuZHtcbHN0bGlz
dGxpc3RpbmduYW1lfXtMaXN0IG9mIGNvZGV9ICAlIGZvciBtb3JlIHBpZWNlcyBvZiBjb2RlIGlu
IG9uZQoKCgolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolICAgICAgTG9naWMgYW5k
IHByb29mcyAgICAgICAgJQolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolIFRoZW9y
ZW0gZW52aXJvbm1lbnRzClxuZXd0aGVvcmVte3RoZW9yZW19e1RoZW9yZW19W3NlY3Rpb25dClxu
ZXd0aGVvcmVte2xlbW1hfXtMZW1tYX1bc2VjdGlvbl0KXG5ld3RoZW9yZW17cHJvcG9zaXRpb259
e1Byb3Bvc2l0aW9ufVtzZWN0aW9uXQpcbmV3dGhlb3JlbXtjb3JvbGxhcnl9e0Nvcm9sbGFyeX1b
c2VjdGlvbl0KXG5ld3RoZW9yZW17ZGVmaW5pdGlvbn17RGVmaW5pdGlvbn1bc2VjdGlvbl0KXG5l
d3RoZW9yZW17Y29uamVjdHVyZX17Q29uamVjdHVyZX1bc2VjdGlvbl0KXHJlbmV3Y29tbWFuZCp7
XHByb29mbmFtZX17UHJvb2Z9CgoKCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUg
ICAgICBFeGFtcGxlIGVudmlyb25tZW50ICAgICAlCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlClxuZXd0aGVvcmVte2V4YW1wbGV9e0V4YW1wbGV9W3NlY3Rpb25d
"""
preamble_dk = """JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJQolIFNldHRpbmdzIGZvciBkb2N1bWVu
dCAoZGFuaXNoKSAlCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKCiUgSW5wdXQg
Y29tbW9uIGRlZmluaXRpb24KXGlucHV0e3ByZWFtYmxlX2Jhc2UudGV4fQoKJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgIEVuY29kaW5nIGFuZCBoeXBoZW5hdGlvbiAgICUKJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSBCYXNpY3M6IGZvbnQsIGNvZGVjIGV0Yy4K
XHVzZXBhY2thZ2VbZGFuaXNoXXtiYWJlbH0JCQkJCQklIGJhYmVsIGlzIGZvciBoeXBoZW5hdGlv
biBhbmQgb3RoZXIgZ29vZGllcwpccmVuZXdjb21tYW5ke1xkYW5pc2hoeXBoZW5taW5zfXsyMn0J
CQklIGV2ZW4gYmV0dGVyIGRhbmlzaCBoeXBoZW5hdGlvbiEKCiUgLmJpYiBkYW5pc2ggcmVkZWZp
bml0aW9uIGZvciBhdXRob3IgaW4gdGl0bGUKXHJlbmV3Y29tbWFuZFxBdXRoYW5keyBvZyB9Clxy
ZW5ld2NvbW1hbmRcQXV0aGFuZHN7LCBvZyB9ClxyZW5ld2NvbW1hbmRcQWZmaWxmb250e1xzbWFs
bH0KCgoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKJSAgICAgICAgIGxzdGxpc3Rp
bmcgICAgICAgICAgICUKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKCiUgbHN0bGlz
dGluZyBsYW5ndWFnZSByZWRlZmluaXRpb25zClxyZW5ld2NvbW1hbmR7XGxzdGxpc3RpbmduYW1l
fXtLb2RlfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJSBmb3Ig
b25lIGJsb2NrIG9mIGNvZGUgYWxvbmUKXHJlbmV3Y29tbWFuZHtcbHN0bGlzdGxpc3RpbmduYW1l
fXtMaXN0ZSBhZiBcbHN0bGlzdGluZ25hbWUgcn0gICAgICAgICAgICAgICAgICAlIGZvciBtb3Jl
IHBpZWNlcyBvZiBjb2RlIGluIG9uZQoKCgolJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JQolICAgICAgTG9naWMgYW5kIHByb29mcyAgICAgICAgJQolJSUlJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJQolIFRoZW9yZW0gZW52aXJvbm1lbnRzClxuZXd0aGVvcmVte3RoZW9yZW19e1PD
pnRuaW5nfVtzZWN0aW9uXQpcbmV3dGhlb3JlbXtsZW1tYX17TGVtbWF9W3NlY3Rpb25dClxuZXd0
aGVvcmVte3Byb3Bvc2l0aW9ufXtQcm9wb3NpdGlvbn1bc2VjdGlvbl0KXG5ld3RoZW9yZW17Y29y
b2xsYXJ5fXtLb3JvbGxhcn1bc2VjdGlvbl0KXG5ld3RoZW9yZW17ZGVmaW5pdGlvbn17RGVmaW5p
dGlvbn1bc2VjdGlvbl0KXG5ld3RoZW9yZW17Y29uamVjdHVyZX17Rm9ybW9kbmluZ31bc2VjdGlv
bl0KXHJlbmV3Y29tbWFuZCp7XHByb29mbmFtZX17QmV2aXN9CgoKJSUlJSUlJSUlJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUKJSAgICAgIEV4YW1wbGUgZW52aXJvbm1lbnQgICAgICUKJSUlJSUlJSUl
JSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUKXG5ld3RoZW9yZW17ZXhhbXBsZX17RWtzZW1wZWx9W3Nl
Y3Rpb25dCgoKCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCiUgICAgICAgVGl0bGUg
YW5kIGxheW91dCAgICAgICAlCiUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlClxzZXR2
YWx1ZXtvZiA9IGFmfQo=
"""

    
parser = argparse.ArgumentParser(description='Make a LaTeX project from Steffan\'s awesome template')
parser.add_argument('path', type=str, nargs='+', help='the path to build the project')
parser.add_argument('-l', type=str, nargs=1, help='the language of the preamble, "en" or "dk"', default=["en"])
parser.add_argument('--zip', dest='zip', action='store_const', const=True, default=False, help='zip the resulting project')
#TODO: Add -c option to clean folders first / after
args = parser.parse_args()

preamble_locale = 'preamble_dk' if args.l[0] == 'dk' else 'preamble_en'
preamble_l_content = preamble_dk if args.l[0] == 'dk' else preamble_en
preamble_l_content = base64.decodestring( preamble_l_content )
preamble_base_content = base64.decodestring( preamble_base )
template_content = base64.decodestring( template )

#TODO: make this specifiable in the prepare.py
######## MODIFICATIONS ########

template_content = template_content.replace( '\subimport{../preamble/}{preamble_en.tex}',
'\subimport{preamble/}{' + preamble_locale + '.tex}')

###############################

PATH = " ".join(args.path)
if not os.path.exists(PATH):
    os.makedirs(PATH)
os.chdir(PATH)
if not os.path.exists('preamble'):
    os.mkdir('preamble')
with open(os.path.join('preamble', preamble_locale + '.tex'), 'w') as preamble_l_file:
    preamble_l_file.write(preamble_l_content)

with open(os.path.join('preamble', 'preamble_base.tex'), 'w') as preamble_base_file:
    preamble_base_file.write(preamble_base_content)

with open('template.tex', 'w') as template_file:
    template_file.write(template_content)

if args.zip:
    fname = os.getcwd() #includes the filepath, sice we cd'ed to it
    import zipfile
    zipf = zipfile.ZipFile(fname + '.zip', 'w', zipfile.ZIP_DEFLATED)
    zipf.write(os.path.join('preamble', preamble_locale + '.tex'))
    zipf.write(os.path.join('preamble', 'preamble_base.tex'))
    zipf.write('template.tex')
    zipf.close()
raw_input('Success, Press enter to exit')
